openapi: 3.0.0
info:
  title: Niceday REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0
servers:
- url: /
paths:
  /messages:
    post:
      tags:
      - messages
      summary: Send a text message
      operationId: sendTextMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        "200":
          description: Success
      x-swagger-router-controller: Messages
  /files:
    post:
      tags:
      - files
      summary: Upload a file
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                receiver_id:
                  type: string
                  description: ID of the user we want to upload the file to
                  example: 38527
                file_path:
                  type: string
                  description: Local path to the file we want to upload
                  example: C:/username/pathtofile
                file:
                  type: string
                  format: binary
              
      responses:
        "200":
          description: Success
      x-swagger-router-controller: FileSharing
  /userdata/{userId}:
    get:
      summary: Get user data by ID
      operationId: getUserData
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user whose data is desired
          example: '38527'
      responses:
        "200":
          description: Success
      x-swagger-router-controller: UserData
  /connectionrequests:
    get:
      summary: Get the pending connection requests
      operationId: getConnectionRequests
      responses:
        "200":
          description: Success
      x-swagger-router-controller: ConnectionRequests
  /usertrackers/smoking/{userId}:
    get:
      summary: Get smoking tracker data for specific user
      operationId: getSmokingTrackerData
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user whose data is desired
          example: '38527'
        - in: query
          name: startTime
          schema:
            type: string
            format: date-time
          required: true
          description: The start of the time range for which to get data
          example: "2021-01-13T09:12:28Z"
        - in: query
          name: endTime
          schema:
            type: string
            format: date-time
          required: true
          description: The end of the time range for which to get data
          example: "2022-02-15T09:12:28Z"
      responses:
        "200":
          description: Succes
          content:
            application/json:
              schema:
                description: List of smoking tracker entries
                type: array
                items:
                  $ref: '#/components/schemas/SmokingTrackerEntry'
      x-swagger-router-controller: UserTrackers
  /acceptconnection:
    post:
      summary: Accept the connection request specified in the body
      operationId: setAcceptConnectionRequests
      requestBody:
        content:
          application/json:
            schema:
              required:
                - invitaton_id
              type: object
              properties:
                invitaton_id:
                  type: string
                  description: ID of the connection request
                  example: "38527"
      responses:
        "200":
          description: Success
      x-swagger-router-controller: ConnectionRequests
  /usertrackers/statuses:
    post:
      summary: Enable or disable trackers for a user
      operationId: setUserTrackerStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTrackerStatusesInput'
      responses:
        "200":
          description: Success
      x-swagger-router-controller: UserTrackers
  /usertrackers/reminder:
    post:
      summary: Enable or disable trackers for a user
      operationId: setTrackerReminder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerReminder'
      responses:
        "200":
          description: Success
      x-swagger-router-controller: UserTrackers

components:
  schemas:
    FileObject:
      properties:
        receiver_id:
          type: integer
          description: ID of the user we want to upload the file to
          example: 38527
        file_path:
          type: string
          description: Local path to the file we want to upload
          example: C:/username/pathtofile
      description: A file to upload.

    Message:
      required:
        - recipient_id
        - text
      type: object
      properties:
        recipient_id:
          type: integer
          description: ID of the user we want to send message to
          example: 38527
        text:
          type: string
          description: Message to send
          example: Hello World
      description: A Message to Send.
    SmokingTrackerEntry:
      type: object
      properties:
        id:
          type: string
          description: uid of tracker entry
          example: '620381d1af7a92028c330734'
        userId:
          type: integer
          description: id of user
          example: 38527
        startTime: 
          example: '2022-02-09T08:56:44.349Z'
          type: string
          format: date-time
        endTime: 
          example: '2022-02-09T08:56:44.349Z'
          type: string
          format: date-time
        sensorName:
          type: string
          example: 'measure_cigarettes'
        sourceName: 
          type: string
          example: 'goalie_2'
        version: 
          type: integer
          example: 2
        value:
          type: object
          properties:
            quantity:
              type: integer
              description: Number of cigarettes in entry
              example: 1
        createdAt:
          type: string
          format: date-time
          example: '2022-02-09T08:56:49.628Z'
        createdBy: 
          type: integer
          example: 38527
        updatedAt:
          type: string
          format: date-time
          example: '2022-02-09T08:56:49.628Z'
        updatedBy: 
          type: integer
          example: 38527

    UserTrackerStatusesInput:
      description: Input for setting user tracker statuses
      required:
      - userId
      - trackerStatuses
      type: object
      properties:
        userId:
          type: integer
          description: ID of the user we want to set tracker statuses for
          example: 38527
        trackerStatuses:
          type: array
          description: List of tracker statuses
          items:
            $ref: '#/components/schemas/TrackerStatus'
    TrackerStatus:
      description: Status for a tracker
      required:
        - trackerId
        - isEnabled
      type: object
      properties:
        trackerId:
          type: integer
          description: >
            ID of the the tracker (see https://github.com/senseobservationsystems/goalie-js/issues/840
            on how to get tracker IDs, for example: cigarette counter has id=1)
          example: 1
        isEnabled:
          type: boolean
          description: Whether the tracker should be enabled
          example: true

    TrackerReminder:
      description: Reminder for a user tracker
      required:
      - userId
      - recurringSchedule
      type: object
      properties:
        userId:
          type: string
          description: ID of the user for which the reminder has to be set
          example: "38527"
        recurringSchedule:
          $ref: '#/components/schemas/RecurringSchedule'

    RecurringSchedule:
      description: Recurring expressions object
      required:
      - title
      - schedule_type
      - recurring_expression
      type: object
      properties:
        title:
          type: string
          description: Titile of the schedule
          example: 'Smoking entry reminder'
        schedule_type:
          type: string
          description: The id of the tracker to set the reminder for
          example: 'tracker_smoking'
        recurring_expression:
          $ref: '#/components/schemas/RecurringExpression'

    RecurringExpression:
      description: Recurring expression object
      required:
      - margin
      - reminder_enabled
      - reminder_margin
      - rrule
      type: object
      properties:
        margin:
          $ref: '#/components/schemas/Margin'
        reminder_enabled:
          type: boolean
          description: Flag for enabling reminder
          example: true
        reminder_margin:
          type: array
          items:
            $ref: '#/components/schemas/Margin'
        rrule:
          type: string
          description: recursive rule object as defined [here](https://dateutil.readthedocs.io/en/stable/rrule.html)
          example: 'DTSTART:20220506T150000\nRRULE:FREQ=DAILY'

    Margin:
      description: Margin object
      required:
      - before
      - after
      type: object
      properties:
        before:
          type: integer
          description: before
          example: 0
        after:
          type: integer
          description: after
          example: 60

