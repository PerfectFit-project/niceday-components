name: Build and publish the specified image at the given path

on:
  workflow_call:
    inputs:
      imagename:
        required: true
        type: string
      context:
        required: true
        type: string

jobs:
  docker_publish:
    runs-on: "ubuntu-20.04"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          repository: senseobservationsystems/goalie-js
      - name: Fetch goaliejs
        shell: bash
        run: |
          cd niceday-broker/
          eval `ssh-agent -s`
          mkdir -p ~/.ssh/
          echo "${{ secrets.GOALIEJS_PRIVATE_PULL_KEY }}" > ~/.ssh/id_goaliejs
          chmod 400 ~/.ssh/id_goaliejs
          ssh-add ~/.ssh/id_goaliejs
          ./script/bootstrap
      - name: Build docker image
        run: docker build . -t ${{ inputs.imagename }} --tag ${{ inputs.imagename }} --label "runnumber=${GITHUB_RUN_ID}" -f Dockerfile
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ inputs.imagename }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ${{ inputs.imagename }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
